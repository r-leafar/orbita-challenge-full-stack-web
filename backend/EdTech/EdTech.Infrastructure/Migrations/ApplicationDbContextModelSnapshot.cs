// <auto-generated />
using System;
using EdTech.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EdTech.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EdTech.Core.Entities.NationalIdentifier", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid")
                        .HasColumnName("student_id");

                    b.Property<string>("IdentifierType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)")
                        .HasColumnName("identifier_type");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("number");

                    b.HasKey("StudentId")
                        .HasName("pk_national_identifier");

                    b.ToTable("national_identifier", (string)null);

                    b.HasDiscriminator<string>("IdentifierType").HasValue("NationalIdentifier");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("EdTech.Core.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("SchoolId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("school_id");

                    b.HasKey("Id")
                        .HasName("pk_students");

                    b.HasIndex("SchoolId")
                        .IsUnique()
                        .HasDatabaseName("ix_students_school_id");

                    b.ToTable("students", (string)null);
                });

            modelBuilder.Entity("EdTech.Core.Entities.CpfIdentifier", b =>
                {
                    b.HasBaseType("EdTech.Core.Entities.NationalIdentifier");

                    b.ToTable("national_identifier", (string)null);

                    b.HasDiscriminator().HasValue("CPF");
                });

            modelBuilder.Entity("EdTech.Core.Entities.NationalIdentifier", b =>
                {
                    b.HasOne("EdTech.Core.Entities.Student", null)
                        .WithOne("NationalIdentifier")
                        .HasForeignKey("EdTech.Core.Entities.NationalIdentifier", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_national_identifier_students_student_id");
                });

            modelBuilder.Entity("EdTech.Core.Entities.Student", b =>
                {
                    b.Navigation("NationalIdentifier")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
