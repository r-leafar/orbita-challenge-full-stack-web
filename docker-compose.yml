services:
  service_webapi:
    build:
      context: ./backend/EdTech     # raiz onde est√° o Dockerfile
      dockerfile: Dockerfile
    container_name: edtech_webapi
    ports:
      - "${HOST_HTTP_PORT}:${WEBAPI_HTTP_PORT}"
      - "${HOST_HTTPS_PORT}:${WEBAPI_HTTPS_PORT}"
    depends_on:
      - postgres
    environment:
      # Conex√£o com o banco (aqui o host √© o nome do servi√ßo "postgres")
      POSTGRES_SERVER: service_postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ASPNETCORE_URLS: "http://+:${WEBAPI_HTTP_PORT};https://+:${WEBAPI_HTTPS_PORT}"
    restart: always
  
  service_frontend:
    build:
      # üîë Caminho para a pasta raiz do seu projeto Vue
      context: ./frontend 
      dockerfile: Dockerfile 
    container_name: frontend

    # Mapeia a porta 80 do container (onde o Nginx roda) para a porta local 
    ports:
      - "${VITE_PORT}:80" 
      
    # üîë Vari√°vel de ambiente usada pelo Vue/Vite para saber onde o backend est√°
    environment:
      # O host √© o nome do servi√ßo do backend (webapi)
      VITE_APP_API_URL: http://service_webapi:${WEBAPI_HTTP_PORT}
      
    restart: always

  service_postgres:
    container_name: server-db
    image: postgres:17.6 
    
    ports:
      - "${POSTGRES_PORT}:5432"
      
    environment:
      # Vari√°veis de ambiente padr√£o do PostgreSQL
      POSTGRES_USER:  ${POSTGRES_USER}      # POSTGRES_USER
      POSTGRES_PASSWORD:  ${POSTGRES_PASSWORD} # POSTGRES_PASSWORD
      POSTGRES_DB:  ${POSTGRES_DB}    # POSTGRES_DB
      
    # Mapeia um volume para persistir os dados do banco de dados 
    # (dados n√£o ser√£o perdidos ao parar o container)
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    
    # Reinicia o container se ele falhar
    restart: always

# Defini√ß√£o do volume para persist√™ncia de dados
volumes:
  postgres_data:
  
